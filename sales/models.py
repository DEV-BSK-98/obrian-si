from django.db import models


class InvoiceItem(models.Model):
    itemSeq = models.IntegerField()
    itemCd = models.CharField(max_length=100)
    itemClsCd = models.CharField(max_length=100)
    itemNm = models.CharField(max_length=255)
    bcd = models.CharField(max_length=100, blank=True, null=True)
    pkgUnitCd = models.CharField(max_length=10)
    pkg = models.FloatField()
    qtyUnitCd = models.CharField(max_length=10)
    qty = models.FloatField()
    prc = models.FloatField()
    splyAmt = models.FloatField()
    dcRt = models.FloatField()
    dcAmt = models.FloatField()
    isrccCd = models.CharField(max_length=100, blank=True, null=True)
    isrccNm = models.CharField(max_length=255, blank=True, null=True)
    isrcRt = models.FloatField()
    isrcAmt = models.FloatField()
    vatCatCd = models.CharField(max_length=10, blank=True, null=True)
    exciseTxCatCd = models.CharField(max_length=10, blank=True, null=True)
    tlCatCd = models.CharField(max_length=10, blank=True, null=True)
    iplCatCd = models.CharField(max_length=10, blank=True, null=True)
    vatTaxblAmt = models.FloatField()
    vatAmt = models.FloatField()
    exciseTaxblAmt = models.FloatField()
    tlTaxblAmt = models.FloatField()
    iplTaxblAmt = models.FloatField()
    iplAmt = models.FloatField()
    tlAmt = models.FloatField()
    exciseTxAmt = models.FloatField()
    totAmt = models.FloatField()


class Invoice(models.Model):
    tpin = models.CharField(max_length=20)
    bhfId = models.CharField(max_length=10)
    orgInvcNo = models.IntegerField()
    cisInvcNo = models.CharField(max_length=20)
    custTpin = models.CharField(max_length=20)
    custNm = models.CharField(max_length=255)
    salesTyCd = models.CharField(max_length=10)
    rcptTyCd = models.CharField(max_length=10)
    pmtTyCd = models.CharField(max_length=10)
    salesSttsCd = models.CharField(max_length=10)
    cfmDt = models.CharField(max_length=20)
    salesDt = models.CharField(max_length=20)
    stockRlsDt = models.CharField(max_length=20, blank=True, null=True)
    cnclReqDt = models.CharField(max_length=20, blank=True, null=True)
    cnclDt = models.CharField(max_length=20, blank=True, null=True)
    rfdDt = models.CharField(max_length=20, blank=True, null=True)
    rfdRsnCd = models.CharField(max_length=100, blank=True, null=True)

    totItemCnt = models.IntegerField()
    taxblAmtA = models.FloatField()
    taxblAmtB = models.FloatField()
    taxblAmtC1 = models.FloatField()
    taxblAmtC2 = models.FloatField()
    taxblAmtC3 = models.FloatField()
    taxblAmtD = models.FloatField()
    taxblAmtRvat = models.FloatField()
    taxblAmtE = models.FloatField()
    taxblAmtF = models.FloatField()
    taxblAmtIpl1 = models.FloatField()
    taxblAmtIpl2 = models.FloatField()
    taxblAmtTl = models.FloatField()
    taxblAmtEcm = models.FloatField()
    taxblAmtExeeg = models.FloatField()
    taxblAmtTot = models.FloatField()

    taxRtA = models.FloatField()
    taxRtB = models.FloatField()
    taxRtC1 = models.FloatField()
    taxRtC2 = models.FloatField()
    taxRtC3 = models.FloatField()
    taxRtD = models.FloatField()
    taxRtRvat = models.FloatField()
    taxRtE = models.FloatField()
    taxRtF = models.FloatField()
    taxRtIpl1 = models.FloatField()
    taxRtIpl2 = models.FloatField()
    taxRtTl = models.FloatField()
    taxRtEcm = models.FloatField()
    taxRtExeeg = models.FloatField()
    taxRtTot = models.FloatField()

    taxAmtA = models.FloatField()
    taxAmtB = models.FloatField()
    taxAmtC1 = models.FloatField()
    taxAmtC2 = models.FloatField()
    taxAmtC3 = models.FloatField()
    taxAmtD = models.FloatField()
    taxAmtRvat = models.FloatField()
    taxAmtE = models.FloatField()
    taxAmtF = models.FloatField()
    taxAmtIpl1 = models.FloatField()
    taxAmtIpl2 = models.FloatField()
    taxAmtTl = models.FloatField()
    taxAmtEcm = models.FloatField()
    taxAmtExeeg = models.FloatField()
    taxAmtTot = models.FloatField()

    totTaxblAmt = models.FloatField()
    totTaxAmt = models.FloatField()
    cashDcRt = models.FloatField()
    cashDcAmt = models.FloatField()
    totAmt = models.FloatField()

    prchrAcptcYn = models.CharField(max_length=1)
    remark = models.TextField(blank=True)
    regrId = models.CharField(max_length=100)
    regrNm = models.CharField(max_length=100)
    modrId = models.CharField(max_length=100)
    modrNm = models.CharField(max_length=100)
    saleCtyCd = models.CharField(max_length=10)
    lpoNumber = models.CharField(max_length=100, blank=True, null=True)
    currencyTyCd = models.CharField(max_length=10)
    exchangeRt = models.CharField(max_length=10)
    destnCountryCd = models.CharField(max_length=10, blank=True, null=True)
    dbtRsnCd = models.CharField(max_length=100, blank=True, null=True)
    invcAdjustReason = models.CharField(max_length=255, blank=True, null=True)

    itemList = models.ManyToManyField(InvoiceItem)

class Credit_Note_Invoice(models.Model):
    tpin = models.CharField(max_length=20)
    bhfId = models.CharField(max_length=10)
    orgSdcId = models.CharField(max_length=10, null=True, blank=True)
    orgInvcNo = models.IntegerField(null=True, blank=True)
    cisInvcNo = models.CharField(max_length=50)
    custTpin = models.CharField(max_length=20)
    custNm = models.CharField(max_length=255)
    salesTyCd = models.CharField(max_length=5)
    rcptTyCd = models.CharField(max_length=5)
    pmtTyCd = models.CharField(max_length=5)
    salesSttsCd = models.CharField(max_length=5)
    cfmDt = models.CharField(max_length=20)
    salesDt = models.CharField(max_length=20)
    stockRlsDt = models.CharField(max_length=20, null=True, blank=True)
    cnclReqDt = models.CharField(max_length=20, null=True, blank=True)
    cnclDt = models.CharField(max_length=20, null=True, blank=True)
    rfdDt = models.CharField(max_length=20, null=True, blank=True)
    rfdRsnCd = models.CharField(max_length=10, null=True, blank=True)
    totItemCnt = models.IntegerField()
    taxblAmtA = models.FloatField()
    taxblAmtB = models.FloatField()
    taxblAmtC1 = models.FloatField()
    taxblAmtC2 = models.FloatField()
    taxblAmtC3 = models.FloatField()
    taxblAmtD = models.FloatField()
    taxblAmtRvat = models.FloatField()
    taxblAmtE = models.FloatField()
    taxblAmtF = models.FloatField()
    taxblAmtIpl1 = models.FloatField()
    taxblAmtIpl2 = models.FloatField()
    taxblAmtTl = models.FloatField()
    taxblAmtEcm = models.FloatField()
    taxblAmtExeeg = models.FloatField()
    taxblAmtTot = models.FloatField()
    taxRtA = models.FloatField()
    taxRtB = models.FloatField()
    taxRtC1 = models.FloatField()
    taxRtC2 = models.FloatField()
    taxRtC3 = models.FloatField()
    taxRtD = models.FloatField()
    taxRtRvat = models.FloatField()
    taxRtE = models.FloatField()
    taxRtF = models.FloatField()
    taxRtIpl1 = models.FloatField()
    taxRtIpl2 = models.FloatField()
    taxRtTl = models.FloatField()
    taxRtEcm = models.FloatField()
    taxRtExeeg = models.FloatField()
    taxRtTot = models.FloatField()
    taxAmtA = models.FloatField()
    taxAmtB = models.FloatField()
    taxAmtC1 = models.FloatField()
    taxAmtC2 = models.FloatField()
    taxAmtC3 = models.FloatField()
    taxAmtD = models.FloatField()
    taxAmtRvat = models.FloatField()
    taxAmtE = models.FloatField()
    taxAmtF = models.FloatField()
    taxAmtIpl1 = models.FloatField()
    taxAmtIpl2 = models.FloatField()
    taxAmtTl = models.FloatField()
    taxAmtEcm = models.FloatField()
    taxAmtExeeg = models.FloatField()
    taxAmtTot = models.FloatField()
    totTaxblAmt = models.FloatField()
    totTaxAmt = models.FloatField()
    cashDcRt = models.FloatField()
    cashDcAmt = models.FloatField()
    totAmt = models.FloatField()
    prchrAcptcYn = models.CharField(max_length=1)
    remark = models.TextField(null=True, blank=True)
    regrId = models.CharField(max_length=50)
    regrNm = models.CharField(max_length=100)
    modrId = models.CharField(max_length=50)
    modrNm = models.CharField(max_length=100)
    saleCtyCd = models.CharField(max_length=10)
    lpoNumber = models.CharField(max_length=50, null=True, blank=True)
    currencyTyCd = models.CharField(max_length=10)
    exchangeRt = models.FloatField()
    destnCountryCd = models.CharField(max_length=10, null=True, blank=True)
    dbtRsnCd = models.CharField(max_length=10, null=True, blank=True)
    invcAdjust = models.CharField(max_length=100, null=True, blank=True)

class Credit_Note_InvoiceItem(models.Model):
    invoice = models.ForeignKey(Invoice, on_delete=models.CASCADE, related_name='items')
    itemSeq = models.IntegerField()
    itemCd = models.CharField(max_length=50)
    itemClsCd = models.CharField(max_length=50)
    itemNm = models.CharField(max_length=255)
    bcd = models.CharField(max_length=50, null=True, blank=True)
    pkgUnitCd = models.CharField(max_length=50)
    pkg = models.FloatField()
    qtyUnitCd = models.CharField(max_length=50)
    qty = models.FloatField()
    prc = models.FloatField()
    splyAmt = models.FloatField()
    dcRt = models.FloatField()
    dcAmt = models.FloatField()
    isrccCd = models.CharField(max_length=50, null=True, blank=True)
    isrccNm = models.CharField(max_length=255, null=True, blank=True)
    isrcRt = models.FloatField()
    isrcAmt = models.FloatField()
    vatCatCd = models.CharField(max_length=10, null=True, blank=True)
    exciseTxCatCd = models.CharField(max_length=10, null=True, blank=True)
    vatTaxblAmt = models.FloatField()
    exciseTaxblAmt = models.FloatField()
    vatAmt = models.FloatField()
    exciseTxAmt = models.FloatField()
    totAmt = models.FloatField()


class Debit_Note_Invoice(models.Model):
    tpin = models.CharField(max_length=20)
    bhfId = models.CharField(max_length=10)
    orgInvcNo = models.IntegerField()
    cisInvcNo = models.CharField(max_length=20)
    custTpin = models.CharField(max_length=20)
    custNm = models.CharField(max_length=100)
    salesTyCd = models.CharField(max_length=5)
    rcptTyCd = models.CharField(max_length=5)
    pmtTyCd = models.CharField(max_length=5)
    salesSttsCd = models.CharField(max_length=5)
    cfmDt = models.CharField(max_length=20)
    salesDt = models.CharField(max_length=20)
    stockRlsDt = models.CharField(max_length=20, null=True, blank=True)
    cnclReqDt = models.CharField(max_length=20, null=True, blank=True)
    cnclDt = models.CharField(max_length=20, null=True, blank=True)
    rfdDt = models.CharField(max_length=20, null=True, blank=True)
    rfdRsnCd = models.CharField(max_length=20, null=True, blank=True)

    totItemCnt = models.IntegerField()
    
    # Taxable Amounts
    taxblAmtA = models.FloatField()
    taxblAmtB = models.FloatField()
    taxblAmtC1 = models.FloatField()
    taxblAmtC2 = models.FloatField()
    taxblAmtC3 = models.FloatField()
    taxblAmtD = models.FloatField()
    taxblAmtRvat = models.FloatField()
    taxblAmtE = models.FloatField()
    taxblAmtF = models.FloatField()
    taxblAmtIpl1 = models.FloatField()
    taxblAmtIpl2 = models.FloatField()
    taxblAmtTl = models.FloatField()
    taxblAmtEcm = models.FloatField()
    taxblAmtExeeg = models.FloatField()
    taxblAmtTot = models.FloatField()

    # Tax Rates
    taxRtA = models.FloatField()
    taxRtB = models.FloatField()
    taxRtC1 = models.FloatField()
    taxRtC2 = models.FloatField()
    taxRtC3 = models.FloatField()
    taxRtD = models.FloatField()
    taxRtRvat = models.FloatField()
    taxRtE = models.FloatField()
    taxRtF = models.FloatField()
    taxRtIpl1 = models.FloatField()
    taxRtIpl2 = models.FloatField()
    taxRtTl = models.FloatField()
    taxRtEcm = models.FloatField()
    taxRtExeeg = models.FloatField()
    taxRtTot = models.FloatField()

    # Tax Amounts
    taxAmtA = models.FloatField()
    taxAmtB = models.FloatField()
    taxAmtC1 = models.FloatField()
    taxAmtC2 = models.FloatField()
    taxAmtC3 = models.FloatField()
    taxAmtD = models.FloatField()
    taxAmtRvat = models.FloatField()
    taxAmtE = models.FloatField()
    taxAmtF = models.FloatField()
    taxAmtIpl1 = models.FloatField()
    taxAmtIpl2 = models.FloatField()
    taxAmtTl = models.FloatField()
    taxAmtEcm = models.FloatField()
    taxAmtExeeg = models.FloatField()
    taxAmtTot = models.FloatField()

    totTaxblAmt = models.FloatField()
    totTaxAmt = models.FloatField()
    cashDcRt = models.FloatField()
    cashDcAmt = models.FloatField()
    totAmt = models.FloatField()

    prchrAcptcYn = models.CharField(max_length=1)
    remark = models.TextField(blank=True, null=True)

    regrId = models.CharField(max_length=50)
    regrNm = models.CharField(max_length=50)
    modrId = models.CharField(max_length=50)
    modrNm = models.CharField(max_length=50)

    saleCtyCd = models.CharField(max_length=10)
    lpoNumber = models.CharField(max_length=50, null=True, blank=True)
    currencyTyCd = models.CharField(max_length=10)
    exchangeRt = models.CharField(max_length=20)
    destnCountryCd = models.CharField(max_length=10, blank=True)
    dbtRsnCd = models.CharField(max_length=10)
    invcAdjustReason = models.TextField()

    def __str__(self):
        return f"Invoice {self.cisInvcNo}"


class Debit_Note_InvoiceItem(models.Model):
    invoice = models.ForeignKey(Invoice, related_name='debit_itemList', on_delete=models.CASCADE)

    itemSeq = models.IntegerField()
    itemCd = models.CharField(max_length=50)
    itemClsCd = models.CharField(max_length=50)
    itemNm = models.CharField(max_length=100)
    bcd = models.CharField(max_length=50, blank=True)
    pkgUnitCd = models.CharField(max_length=10)
    pkg = models.FloatField()
    qtyUnitCd = models.CharField(max_length=10)
    qty = models.FloatField()
    prc = models.FloatField()
    splyAmt = models.FloatField()
    dcRt = models.FloatField()
    dcAmt = models.FloatField()
    isrccCd = models.CharField(max_length=10, blank=True)
    isrccNm = models.CharField(max_length=100, blank=True)
    isrcRt = models.FloatField()
    isrcAmt = models.FloatField()
    vatCatCd = models.CharField(max_length=5)
    exciseTxCatCd = models.CharField(max_length=10, blank=True, null=True)
    vatTaxblAmt = models.FloatField()
    exciseTaxblAmt = models.FloatField()
    vatAmt = models.FloatField()
    exciseTxAmt = models.FloatField()
    totAmt = models.FloatField()

    def __str__(self):
        return f"{self.itemNm} ({self.itemCd})"



class LPO_Invoice(models.Model):
    tpin = models.CharField(max_length=20)
    bhfId = models.CharField(max_length=10)
    orgInvcNo = models.IntegerField()
    cisInvcNo = models.CharField(max_length=20)
    custTpin = models.CharField(max_length=20)
    custNm = models.CharField(max_length=100)
    salesTyCd = models.CharField(max_length=5)
    rcptTyCd = models.CharField(max_length=5)
    pmtTyCd = models.CharField(max_length=5)
    salesSttsCd = models.CharField(max_length=5)
    cfmDt = models.CharField(max_length=20)
    salesDt = models.CharField(max_length=20)
    stockRlsDt = models.CharField(max_length=20, null=True, blank=True)
    cnclReqDt = models.CharField(max_length=20, null=True, blank=True)
    cnclDt = models.CharField(max_length=20, null=True, blank=True)
    rfdDt = models.CharField(max_length=20, null=True, blank=True)
    rfdRsnCd = models.CharField(max_length=20, null=True, blank=True)

    totItemCnt = models.IntegerField()

    # Taxable Amounts
    taxblAmtA = models.FloatField()
    taxblAmtB = models.FloatField()
    taxblAmtC1 = models.FloatField()
    taxblAmtC2 = models.FloatField()
    taxblAmtC3 = models.FloatField()
    taxblAmtD = models.FloatField()
    taxblAmtRvat = models.FloatField()
    taxblAmtE = models.FloatField()
    taxblAmtF = models.FloatField()
    taxblAmtIpl1 = models.FloatField()
    taxblAmtIpl2 = models.FloatField()
    taxblAmtTl = models.FloatField()
    taxblAmtEcm = models.FloatField()
    taxblAmtExeeg = models.FloatField()
    taxblAmtTot = models.FloatField()

    # Tax Rates
    taxRtA = models.FloatField()
    taxRtB = models.FloatField()
    taxRtC1 = models.FloatField()
    taxRtC2 = models.FloatField()
    taxRtC3 = models.FloatField()
    taxRtD = models.FloatField()
    taxRtRvat = models.FloatField()
    taxRtE = models.FloatField()
    taxRtF = models.FloatField()
    taxRtIpl1 = models.FloatField()
    taxRtIpl2 = models.FloatField()
    taxRtTl = models.FloatField()
    taxRtEcm = models.FloatField()
    taxRtExeeg = models.FloatField()
    taxRtTot = models.FloatField()

    # Tax Amounts
    taxAmtA = models.FloatField()
    taxAmtB = models.FloatField()
    taxAmtC1 = models.FloatField()
    taxAmtC2 = models.FloatField()
    taxAmtC3 = models.FloatField()
    taxAmtD = models.FloatField()
    taxAmtRvat = models.FloatField()
    taxAmtE = models.FloatField()
    taxAmtF = models.FloatField()
    taxAmtIpl1 = models.FloatField()
    taxAmtIpl2 = models.FloatField()
    taxAmtTl = models.FloatField()
    taxAmtEcm = models.FloatField()
    taxAmtExeeg = models.FloatField()
    taxAmtTot = models.FloatField()

    # Totals
    totTaxblAmt = models.FloatField()
    totTaxAmt = models.FloatField()
    cashDcRt = models.FloatField()
    cashDcAmt = models.FloatField()
    totAmt = models.FloatField()

    prchrAcptcYn = models.CharField(max_length=1)
    remark = models.TextField(blank=True, null=True)
    
    regrId = models.CharField(max_length=50)
    regrNm = models.CharField(max_length=50)
    modrId = models.CharField(max_length=50)
    modrNm = models.CharField(max_length=50)

    saleCtyCd = models.CharField(max_length=10)
    lpoNumber = models.CharField(max_length=50, null=True, blank=True)
    currencyTyCd = models.CharField(max_length=10)
    exchangeRt = models.CharField(max_length=20)
    destnCountryCd = models.CharField(max_length=10, blank=True)
    dbtRsnCd = models.CharField(max_length=10, blank=True)
    invcAdjustReason = models.TextField(blank=True)

    def __str__(self):
        return f"Invoice {self.cisInvcNo}"


class LPO_InvoiceItem(models.Model):
    invoice = models.ForeignKey(Invoice, related_name='lpo_itemList', on_delete=models.CASCADE)

    itemSeq = models.IntegerField()
    itemCd = models.CharField(max_length=50)
    itemClsCd = models.CharField(max_length=50)
    itemNm = models.CharField(max_length=100)
    bcd = models.CharField(max_length=50, blank=True)
    pkgUnitCd = models.CharField(max_length=10)
    pkg = models.FloatField()
    qtyUnitCd = models.CharField(max_length=10)
    qty = models.FloatField()
    prc = models.FloatField()
    splyAmt = models.FloatField()
    dcRt = models.FloatField()
    dcAmt = models.FloatField()
    vatCatCd = models.CharField(max_length=5)
    vatTaxblAmt = models.FloatField()
    vatAmt = models.FloatField()
    totAmt = models.FloatField()

    def __str__(self):
        return f"{self.itemNm} ({self.itemCd})"


class Export_Invoice(models.Model):
    tpin = models.CharField(max_length=20)
    bhfId = models.CharField(max_length=10)
    orgInvcNo = models.IntegerField()
    cisInvcNo = models.CharField(max_length=20)
    custTpin = models.CharField(max_length=20)
    custNm = models.CharField(max_length=100)
    salesTyCd = models.CharField(max_length=5)
    rcptTyCd = models.CharField(max_length=5)
    pmtTyCd = models.CharField(max_length=5)
    salesSttsCd = models.CharField(max_length=5)

    cfmDt = models.CharField(max_length=20)
    salesDt = models.CharField(max_length=20)
    stockRlsDt = models.CharField(max_length=20, null=True, blank=True)
    cnclReqDt = models.CharField(max_length=20, null=True, blank=True)
    cnclDt = models.CharField(max_length=20, null=True, blank=True)
    rfdDt = models.CharField(max_length=20, null=True, blank=True)
    rfdRsnCd = models.CharField(max_length=20, null=True, blank=True)

    totItemCnt = models.IntegerField()

    # Taxable amounts
    taxblAmtA = models.FloatField()
    taxblAmtB = models.FloatField()
    taxblAmtC1 = models.FloatField()
    taxblAmtC2 = models.FloatField()
    taxblAmtC3 = models.FloatField()
    taxblAmtD = models.FloatField()
    taxblAmtRvat = models.FloatField()
    taxblAmtE = models.FloatField()
    taxblAmtF = models.FloatField()
    taxblAmtIpl1 = models.FloatField()
    taxblAmtIpl2 = models.FloatField()
    taxblAmtTl = models.FloatField()
    taxblAmtEcm = models.FloatField()
    taxblAmtExeeg = models.FloatField()
    taxblAmtTot = models.FloatField()

    # Tax rates
    taxRtA = models.FloatField()
    taxRtB = models.FloatField()
    taxRtC1 = models.FloatField()
    taxRtC2 = models.FloatField()
    taxRtC3 = models.FloatField()
    taxRtD = models.FloatField()
    taxRtRvat = models.FloatField()
    taxRtE = models.FloatField()
    taxRtF = models.FloatField()
    taxRtIpl1 = models.FloatField()
    taxRtIpl2 = models.FloatField()
    taxRtTl = models.FloatField()
    taxRtEcm = models.FloatField()
    taxRtExeeg = models.FloatField()
    taxRtTot = models.FloatField()

    # Tax amounts
    taxAmtA = models.FloatField()
    taxAmtB = models.FloatField()
    taxAmtC1 = models.FloatField()
    taxAmtC2 = models.FloatField()
    taxAmtC3 = models.FloatField()
    taxAmtD = models.FloatField()
    taxAmtRvat = models.FloatField()
    taxAmtE = models.FloatField()
    taxAmtF = models.FloatField()
    taxAmtIpl1 = models.FloatField()
    taxAmtIpl2 = models.FloatField()
    taxAmtTl = models.FloatField()
    taxAmtEcm = models.FloatField()
    taxAmtExeeg = models.FloatField()
    taxAmtTot = models.FloatField()

    # Totals
    totTaxblAmt = models.FloatField()
    totTaxAmt = models.FloatField()
    cashDcRt = models.FloatField()
    cashDcAmt = models.FloatField()
    totAmt = models.FloatField()

    prchrAcptcYn = models.CharField(max_length=1)
    remark = models.TextField(blank=True, null=True)

    regrId = models.CharField(max_length=50)
    regrNm = models.CharField(max_length=50)
    modrId = models.CharField(max_length=50)
    modrNm = models.CharField(max_length=50)

    saleCtyCd = models.CharField(max_length=10)
    lpoNumber = models.CharField(max_length=50, null=True, blank=True)
    currencyTyCd = models.CharField(max_length=10)
    exchangeRt = models.CharField(max_length=20)

    destnCountryCd = models.CharField(max_length=10, blank=True)
    dbtRsnCd = models.CharField(max_length=10, blank=True)
    invcAdjustReason = models.TextField(blank=True)

    def __str__(self):
        return f"Invoice {self.cisInvcNo}"


class Export_InvoiceItem(models.Model):
    invoice = models.ForeignKey(Invoice, related_name='export_itemList', on_delete=models.CASCADE)

    itemSeq = models.IntegerField()
    itemCd = models.CharField(max_length=50)
    itemClsCd = models.CharField(max_length=50)
    itemNm = models.CharField(max_length=100)
    bcd = models.CharField(max_length=50, blank=True)

    pkgUnitCd = models.CharField(max_length=10)
    pkg = models.FloatField()
    qtyUnitCd = models.CharField(max_length=10)
    qty = models.FloatField()
    prc = models.FloatField()
    splyAmt = models.FloatField()
    dcRt = models.FloatField()
    dcAmt = models.FloatField()

    # Added tax and source-related fields
    isrccCd = models.CharField(max_length=20, blank=True)
    isrccNm = models.CharField(max_length=100, blank=True)
    isrcRt = models.FloatField()
    isrcAmt = models.FloatField()

    vatCatCd = models.CharField(max_length=5)
    exciseTxCatCd = models.CharField(max_length=20, blank=True, null=True)
    vatTaxblAmt = models.FloatField()
    exciseTaxblAmt = models.FloatField()
    vatAmt = models.FloatField()
    exciseTxAmt = models.FloatField()
    totAmt = models.FloatField()

    def __str__(self):
        return f"{self.itemNm} ({self.itemCd})"
