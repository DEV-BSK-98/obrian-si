from django.db import models
from datetime import date


class LineItems(models.Model):
    itemSeq = models.IntegerField(default=0.00, null=True)
    itemCd = models.CharField(max_length=100,default="", null=True)
    itemClsCd = models.CharField(max_length=100,default="", null=True)
    itemNm = models.CharField(max_length=255,default="", null=True)
    bcd = models.CharField(max_length=100, blank=True, null=True)
    pkgUnitCd = models.CharField(max_length=10,default="", null=True)
    pkg = models.FloatField(default=0.00, null=True)
    qtyUnitCd = models.CharField(max_length=10,default="", null=True)
    qty = models.FloatField(default=0.00, null=True)
    prc = models.FloatField(default=0.00, null=True)
    splyAmt = models.FloatField(default=0.00, null=True)
    dcRt = models.FloatField(default=0.00, null=True)
    dcAmt = models.FloatField(default=0.00, null=True)
    isrccCd = models.CharField(max_length=100, blank=True, null=True,default="")
    isrccNm = models.CharField(max_length=255, blank=True, null=True,default="")
    isrcRt = models.FloatField(default=0.00, null=True)
    isrcAmt = models.FloatField(default=0.00, null=True)
    vatCatCd = models.CharField(max_length=10, blank=True, null=True,default="")
    exciseTxCatCd = models.CharField(max_length=10, blank=True, null=True,default="")
    tlCatCd = models.CharField(max_length=10, blank=True, null=True,default="")
    iplCatCd = models.CharField(max_length=10, blank=True, null=True,default="")
    vatTaxblAmt = models.FloatField(default=0.00, null=True)
    vatAmt = models.FloatField(default=0.00, null=True)
    exciseTaxblAmt = models.FloatField(default=0.00, null=True)
    tlTaxblAmt = models.FloatField(default=0.00, null=True)
    iplTaxblAmt = models.FloatField(default=0.00, null=True)
    iplAmt = models.FloatField(default=0.00, null=True)
    tlAmt = models.FloatField(default=0.00, null=True)
    exciseTxAmt = models.FloatField(default=0.00, null=True)
    totAmt = models.FloatField(default=0.00, null=True)
    tax_types = models.CharField(max_length=10, blank=True, null=True,default="")
    def __str__(self):
        return f"Item {self.itemNm} ({self.itemCd})"
class Purchase(models.Model):
    tpin = models.CharField(max_length=20, default="", null=True)
    bhfId = models.CharField(max_length=10, default="", null=True)
    cisInvcNo = models.CharField(max_length=20, unique=True,default="", null=True)
    spplrTpin = models.CharField(max_length=15, default="", null=True)
    spplrNm = models.CharField(max_length=255, default="", null=True)
    spplrBhfId = models.CharField(max_length=10, default="", null=True)
    spplrInvcNo = models.CharField(max_length=255, unique=True,default="",null=True)
    rcptTyCd = models.CharField(max_length=10, default="", null=True)
    pmtTyCd = models.CharField(max_length=10, default="", null=True)
    cfmDt = models.CharField(max_length=255,default="",null=True)
    salesDt = models.CharField(max_length=255, default="", null=True)
    stockRlsDt = models.CharField(max_length=255,null=True, blank=True, default="")
    totItemCnt = models.IntegerField(default=0,null=True)
    totTaxblAmt = models.DecimalField(max_digits=10, decimal_places=4)
    totTaxAmt = models.DecimalField(max_digits=10, decimal_places=4)
    totAmt = models.DecimalField(max_digits=10, decimal_places=2, default=0.00)
    remark = models.TextField(null=True, blank=True, default="")

    itemList = models.ManyToManyField (LineItems, blank=True, default="")

    taxblAmtA = models.FloatField(default=0.00, null=True)
    taxblAmtB = models.FloatField(default=0.00, null=True)
    taxblAmtC1 = models.FloatField(default=0.00, null=True)
    taxblAmtC2 = models.FloatField(default=0.00, null=True)
    taxblAmtC3 = models.FloatField(default=0.00, null=True)
    taxblAmtD = models.FloatField(default=0.00, null=True)
    taxblAmtRvat = models.FloatField(default=0.00, null=True)
    taxblAmtE = models.FloatField(default=0.00, null=True)
    taxblAmtF = models.FloatField(default=0.00, null=True)
    taxblAmtIpl1 = models.FloatField(default=0.00, null=True)
    taxblAmtIpl2 = models.FloatField(default=0.00, null=True)
    taxblAmtTl = models.FloatField(default=0.00, null=True)
    taxblAmtEcm = models.FloatField(default=0.00, null=True)
    taxblAmtExeeg = models.FloatField(default=0.00, null=True)
    taxblAmtTot = models.FloatField(default=0.00, null=True)

    taxRtA = models.FloatField(default=0.00, null=True)
    taxRtB = models.FloatField(default=0.00, null=True)
    taxRtC1 = models.FloatField(default=0.00, null=True)
    taxRtC2 = models.FloatField(default=0.00, null=True)
    taxRtC3 = models.FloatField(default=0.00, null=True)
    taxRtD = models.FloatField(default=0.00, null=True)
    taxRtRvat = models.FloatField(default=0.00, null=True)
    taxRtE = models.FloatField(default=0.00, null=True)
    taxRtF = models.FloatField(default=0.00, null=True)
    taxRtIpl1 = models.FloatField(default=0.00, null=True)
    taxRtIpl2 = models.FloatField(default=0.00, null=True)
    taxRtTl = models.FloatField(default=0.00, null=True)
    taxRtEcm = models.FloatField(default=0.00, null=True)
    taxRtExeeg = models.FloatField(default=0.00, null=True)
    taxRtTot = models.FloatField(default=0.00, null=True)

    taxAmtA = models.FloatField(default=0.00, null=True)
    taxAmtB = models.FloatField(default=0.00, null=True)
    taxAmtC1 = models.FloatField(default=0.00, null=True)
    taxAmtC2 = models.FloatField(default=0.00, null=True)
    taxAmtC3 = models.FloatField(default=0.00, null=True)
    taxAmtD = models.FloatField(default=0.00, null=True)
    taxAmtRvat = models.FloatField(default=0.00, null=True)
    taxAmtE = models.FloatField(default=0.00, null=True)
    taxAmtF = models.FloatField(default=0.00, null=True)
    taxAmtIpl1 = models.FloatField(default=0.00, null=True)
    taxAmtIpl2 = models.FloatField(default=0.00, null=True)
    taxAmtTl = models.FloatField(default=0.00, null=True)
    taxAmtEcm = models.FloatField(default=0.00, null=True)
    taxAmtExeeg = models.FloatField(default=0.00, null=True)
    taxAmtTot = models.FloatField(default=0.00, null=True)

    totTaxblAmt = models.FloatField(default=0.00, null=True)
    totTaxAmt = models.FloatField(default=0.00, null=True)
    cashDcRt = models.FloatField(default=0.00, null=True)
    cashDcAmt = models.FloatField(default=0.00, null=True)
    totAmt = models.FloatField(default=0.00, null=True)
    cnclReqDt = models.CharField(max_length=20, null=True, blank=True)
    cnclDt = models.CharField(max_length=20, null=True, blank=True)
    rfdDt = models.CharField(max_length=20, null=True, blank=True)
    rfdRsnCd = models.CharField(max_length=10, null=True, blank=True)
    salesTyCd = models.CharField(max_length=5, default="", null=True)
    salesSttsCd = models.CharField(max_length=5, default="", null=True)

    prchrAcptcYn = models.CharField(max_length=1, default="")
    remark = models.TextField(blank=True, default="")
    regrId = models.CharField(max_length=100, default="", null=True)
    regrNm = models.CharField(max_length=100, default="", null=True)
    modrId = models.CharField(max_length=100, default="", null=True)
    modrNm = models.CharField(max_length=100, default="", null=True)
    saleCtyCd = models.CharField(max_length=10, default="", null=True)
    lpoNumber = models.CharField(max_length=100, blank=True, null=True, default="")
    currencyTyCd = models.CharField(max_length=10, default="", null=True)
    exchangeRt = models.CharField(max_length=10, default="", null=True)
    destnCountryCd = models.CharField(max_length=10, blank=True, null=True, default="")
    dbtRsnCd = models.CharField(max_length=100, blank=True, null=True, default="")
    invcAdjustReason = models.CharField(max_length=255, blank=True, null=True, default="")

    def __str__(self):
        return f"Invoice {self.spplrInvcNo} - {self.spplrNm}"


class Import_LineItems(models.Model):
    itemSeq = models.IntegerField(default=0.00, null=True)
    itemCd = models.CharField(max_length=100,default="", null=True)
    itemClsCd = models.CharField(max_length=100,default="", null=True)
    itemNm = models.CharField(max_length=255,default="", null=True)
    bcd = models.CharField(max_length=100, blank=True, null=True)
    pkgUnitCd = models.CharField(max_length=10,default="", null=True)
    pkg = models.FloatField(default=0.00, null=True)
    qtyUnitCd = models.CharField(max_length=10,default="", null=True)
    qty = models.FloatField(default=0.00, null=True)
    prc = models.FloatField(default=0.00, null=True)
    splyAmt = models.FloatField(default=0.00, null=True)
    dcRt = models.FloatField(default=0.00, null=True)
    dcAmt = models.FloatField(default=0.00, null=True)
    isrccCd = models.CharField(max_length=100, blank=True, null=True,default="")
    isrccNm = models.CharField(max_length=255, blank=True, null=True,default="")
    isrcRt = models.FloatField(default=0.00, null=True)
    isrcAmt = models.FloatField(default=0.00, null=True)
    vatCatCd = models.CharField(max_length=10, blank=True, null=True,default="")
    exciseTxCatCd = models.CharField(max_length=10, blank=True, null=True,default="")
    tlCatCd = models.CharField(max_length=10, blank=True, null=True,default="")
    iplCatCd = models.CharField(max_length=10, blank=True, null=True,default="")
    vatTaxblAmt = models.FloatField(default=0.00, null=True)
    vatAmt = models.FloatField(default=0.00, null=True)
    exciseTaxblAmt = models.FloatField(default=0.00, null=True)
    tlTaxblAmt = models.FloatField(default=0.00, null=True)
    iplTaxblAmt = models.FloatField(default=0.00, null=True)
    iplAmt = models.FloatField(default=0.00, null=True)
    tlAmt = models.FloatField(default=0.00, null=True)
    exciseTxAmt = models.FloatField(default=0.00, null=True)
    totAmt = models.FloatField(default=0.00, null=True)
    tax_types = models.CharField(max_length=10, blank=True, null=True,default="")
    def __str__(self):
        return f"Item {self.itemNm} ({self.itemCd})"

class Import_Purchase(models.Model):
    tpin = models.CharField(max_length=20, default="", null=True)
    bhfId = models.CharField(max_length=10, default="", null=True)
    orgInvcNo = models.CharField(max_length=255,default="", null=True)
    cisInvcNo = models.CharField(max_length=20, default="", null=True)
    spplrTpin = models.CharField(max_length=15, default="", null=True)
    spplrNm = models.CharField(max_length=255, default="", null=True)
    spplrBhfId = models.CharField(max_length=10, default="", null=True)
    spplrInvcNo = models.CharField(max_length=255,default="",null=True)
    rcptTyCd = models.CharField(max_length=10, default="", null=True)
    pmtTyCd = models.CharField(max_length=10, default="", null=True)
    cfmDt = models.CharField(max_length=255,default="",null=True)
    salesDt = models.CharField(max_length=255, default="", null=True)
    stockRlsDt = models.CharField(max_length=255,null=True, blank=True, default="")
    totItemCnt = models.IntegerField(default=0,null=True)
    totTaxblAmt = models.DecimalField(max_digits=10, decimal_places=4)
    totTaxAmt = models.DecimalField(max_digits=10, decimal_places=4)
    totAmt = models.DecimalField(max_digits=10, decimal_places=2, default=0.00)
    remark = models.TextField(null=True, blank=True, default="")
    cnclReqDt = models.CharField(max_length=20, null=True, blank=True)
    cnclDt = models.CharField(max_length=20, null=True, blank=True)
    rfdDt = models.CharField(max_length=20, null=True, blank=True)
    rfdRsnCd = models.CharField(max_length=10, null=True, blank=True)
    
    salesTyCd = models.CharField(max_length=5, default="", null=True)
    salesSttsCd = models.CharField(max_length=5, default="", null=True)
    itemList = models.ManyToManyField (Import_LineItems, blank=True, default="")

    taxblAmtA = models.FloatField(default=0.00, null=True)
    taxblAmtB = models.FloatField(default=0.00, null=True)
    taxblAmtC1 = models.FloatField(default=0.00, null=True)
    taxblAmtC2 = models.FloatField(default=0.00, null=True)
    taxblAmtC3 = models.FloatField(default=0.00, null=True)
    taxblAmtD = models.FloatField(default=0.00, null=True)
    taxblAmtRvat = models.FloatField(default=0.00, null=True)
    taxblAmtE = models.FloatField(default=0.00, null=True)
    taxblAmtF = models.FloatField(default=0.00, null=True)
    taxblAmtIpl1 = models.FloatField(default=0.00, null=True)
    taxblAmtIpl2 = models.FloatField(default=0.00, null=True)
    taxblAmtTl = models.FloatField(default=0.00, null=True)
    taxblAmtEcm = models.FloatField(default=0.00, null=True)
    taxblAmtExeeg = models.FloatField(default=0.00, null=True)
    taxblAmtTot = models.FloatField(default=0.00, null=True)

    taxRtA = models.FloatField(default=0.00, null=True)
    taxRtB = models.FloatField(default=0.00, null=True)
    taxRtC1 = models.FloatField(default=0.00, null=True)
    taxRtC2 = models.FloatField(default=0.00, null=True)
    taxRtC3 = models.FloatField(default=0.00, null=True)
    taxRtD = models.FloatField(default=0.00, null=True)
    taxRtRvat = models.FloatField(default=0.00, null=True)
    taxRtE = models.FloatField(default=0.00, null=True)
    taxRtF = models.FloatField(default=0.00, null=True)
    taxRtIpl1 = models.FloatField(default=0.00, null=True)
    taxRtIpl2 = models.FloatField(default=0.00, null=True)
    taxRtTl = models.FloatField(default=0.00, null=True)
    taxRtEcm = models.FloatField(default=0.00, null=True)
    taxRtExeeg = models.FloatField(default=0.00, null=True)
    taxRtTot = models.FloatField(default=0.00, null=True)

    taxAmtA = models.FloatField(default=0.00, null=True)
    taxAmtB = models.FloatField(default=0.00, null=True)
    taxAmtC1 = models.FloatField(default=0.00, null=True)
    taxAmtC2 = models.FloatField(default=0.00, null=True)
    taxAmtC3 = models.FloatField(default=0.00, null=True)
    taxAmtD = models.FloatField(default=0.00, null=True)
    taxAmtRvat = models.FloatField(default=0.00, null=True)
    taxAmtE = models.FloatField(default=0.00, null=True)
    taxAmtF = models.FloatField(default=0.00, null=True)
    taxAmtIpl1 = models.FloatField(default=0.00, null=True)
    taxAmtIpl2 = models.FloatField(default=0.00, null=True)
    taxAmtTl = models.FloatField(default=0.00, null=True)
    taxAmtEcm = models.FloatField(default=0.00, null=True)
    taxAmtExeeg = models.FloatField(default=0.00, null=True)
    taxAmtTot = models.FloatField(default=0.00, null=True)

    totTaxblAmt = models.FloatField(default=0.00, null=True)
    totTaxAmt = models.FloatField(default=0.00, null=True)
    cashDcRt = models.FloatField(default=0.00, null=True)
    cashDcAmt = models.FloatField(default=0.00, null=True)
    totAmt = models.FloatField(default=0.00, null=True)

    prchrAcptcYn = models.CharField(max_length=1, default="")
    remark = models.TextField(blank=True, default="")
    regrId = models.CharField(max_length=100, default="", null=True)
    regrNm = models.CharField(max_length=100, default="", null=True)
    modrId = models.CharField(max_length=100, default="", null=True)
    modrNm = models.CharField(max_length=100, default="", null=True)
    saleCtyCd = models.CharField(max_length=10, default="", null=True)
    lpoNumber = models.CharField(max_length=100, blank=True, null=True, default="")
    currencyTyCd = models.CharField(max_length=10, default="", null=True)
    exchangeRt = models.CharField(max_length=10, default="", null=True)
    destnCountryCd = models.CharField(max_length=10, blank=True, null=True, default="")
    dbtRsnCd = models.CharField(max_length=100, blank=True, null=True, default="")
    invcAdjustReason = models.CharField(max_length=255, blank=True, null=True, default="")

    def __str__(self):
        return f"Invoice {self.spplrInvcNo} - {self.spplrNm}"
